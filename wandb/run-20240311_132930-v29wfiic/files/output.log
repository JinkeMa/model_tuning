INFO: Starting training:
        Epochs:          5
        Batch size:      1
        Learning rate:   1e-05
        Training size:   108
        Validation size: 12
        Checkpoints:     True
        Device:          cuda
        Images scaling:  1
        Mixed Precision: False
Epoch 1/5:   0%|                                                                                                                       | 0/108 [01:15<?, ?img/s]
ERROR: Detected OutOfMemoryError! Enabling checkpointing to reduce memory usage, but this slows down training. Consider enabling AMP (--amp) for fast and memory efficient training
Traceback (most recent call last):
  File "f:\model_tuning\train\train.py", line 281, in <module>
    train_model(
  File "f:\model_tuning\train\train.py", line 173, in train_model
    masks_pred = model(images)
  File "D:\ProgramData\miniconda3\envs\pytorch_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "D:\ProgramData\miniconda3\envs\pytorch_env\lib\site-packages\torch\nn\modules\module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "f:\model_tuning\train\unet_model.py", line 34, in forward
    x = self.up4(x, x1)
  File "D:\ProgramData\miniconda3\envs\pytorch_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "D:\ProgramData\miniconda3\envs\pytorch_env\lib\site-packages\torch\nn\modules\module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "f:\model_tuning\train\unet_parts.py", line 57, in forward
    x1 = self.up(x1)
  File "D:\ProgramData\miniconda3\envs\pytorch_env\lib\site-packages\torch\nn\modules\module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "D:\ProgramData\miniconda3\envs\pytorch_env\lib\site-packages\torch\nn\modules\module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "D:\ProgramData\miniconda3\envs\pytorch_env\lib\site-packages\torch\nn\modules\conv.py", line 952, in forward
    return F.conv_transpose2d(
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1002.00 MiB. GPU 0 has a total capacity of 8.00 GiB of which 0 bytes is free. Of the allocated memory 14.25 GiB is allocated by PyTorch, and 174.27 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "f:\model_tuning\train\train.py", line 296, in <module>
    model.use_checkpointing()
  File "f:\model_tuning\train\unet_model.py", line 39, in use_checkpointing
    self.inc = torch.utils.checkpoint(self.inc)
TypeError: 'module' object is not callable