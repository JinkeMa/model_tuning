INFO: Starting training:
        Epochs:          5
        Batch size:      1
        Learning rate:   1e-05
        Training size:   108
        Validation size: 12
        Checkpoints:     False
        Device:          cuda
        Images scaling:  1
        Mixed Precision: False
Epoch 1/5:  16%|███████████████████                                                                                                      | 17/108 [00:02<00:09,  9.49img/s, loss (batch)=1.37]
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 1, 256, 256]) torch.Size([1, 256, 256])
torch.Size([1, 256, 256]) torch.Size([1, 256, 256])
Epoch 1/5:  19%|███████████████████████▌                                                                                                 | 21/108 [00:03<00:13,  6.31img/s, loss (batch)=1.31]
Traceback (most recent call last):
  File "f:\model_tuning\train\train.py", line 288, in <module>
    train_model(
  File "f:\model_tuning\train\train.py", line 221, in train_model
    val_score = evaluate(model, val_loader, device, amp)
  File "D:\ProgramData\miniconda3\envs\pytorch_env\lib\site-packages\torch\utils\_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "f:\model_tuning\train\evaluate.py", line 30, in evaluate
    dice_score += dice_coeff(mask_pred, mask_true, reduce_batch_first=False)
  File "f:\model_tuning\train\dice_score.py", line 8, in dice_coeff
    assert input.size() == target.size()
AssertionError